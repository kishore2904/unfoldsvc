plugins {
	id 'java'
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'maven-publish'  // Add the maven-publish plugin
}

group = 'com.unfold'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok:1.18.24'
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.33'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' // For JSON parsing
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	enabled = true  // Ensure bootJar is enabled
}

// Publishing configuration
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			artifact tasks.bootJar  // Include bootJar artifact explicitly
		}
	}

	repositories {
		maven {
			url = uri("$buildDir/repos")
		}
	}
}

// Ensure that the publishing task depends on bootJar
tasks.named('publishMavenJavaPublicationToMavenRepository') {
	dependsOn tasks.bootJar  // Ensure bootJar runs before publish
}

// Ensure that the metadata generation depends on bootJar
tasks.named('generateMetadataFileForMavenJavaPublication') {
	dependsOn tasks.bootJar  // Make sure bootJar is executed before metadata generation
}
